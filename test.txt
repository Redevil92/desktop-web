<template>
  <div>
    <slot name="header" :triggerResize="resizePropertyPanel"> </slot>

    <div ref="propertiesPanel" :style="`height:${this.panelHeight}px`" class="custom-scrollbar">
      <slot name="default" :triggerResize="resizePropertyPanel"></slot>
    </div>
  </div>
</template>

<script lang="ts">
import Vue from 'vue';

import '@/css/CustomScrollbar.css';

const ResizablePanel = Vue.extend({
  name: 'ResizablePanel',
  components: {},
  props: {
    minHeight: {
      type: Number,
      default: 400,
    },
    paddingBottom: {
      type: Number,
      default: 25,
    },
    initialOffsetTop: {
      type: Number,
      default: 0,
    },
    fromElement: {
      type: Object,
      default: null,
    },
  },
  data: () => {
    return {
      panelHeight: 400,
    };
  },
  computed: {},
  watch: {
    fromElement() {
      this.resizePropertyPanel();
    },
  },
  methods: {
    resizePropertyPanel(): void {
      let totalHeight = window.innerHeight;
      if (this.fromElement !== null) {
        totalHeight = this.fromElement.clientHeight;
      }

      // Wait until the next render cycle updates the DOM
      Vue.nextTick(() => {
        let distanceFromTop = (this.$refs.propertiesPanel as HTMLElement).getBoundingClientRect().top;
        if (distanceFromTop === 0) {
          distanceFromTop = this.initialOffsetTop;
        }
        const calculateHeight = totalHeight - distanceFromTop - this.paddingBottom;
        this.panelHeight = calculateHeight;
      });
    },
  },
  created() {
    window.addEventListener('resize', this.resizePropertyPanel);
  },
  destroyed() {
    window.removeEventListener('resize', this.resizePropertyPanel);
  },
  mounted() {
    this.resizePropertyPanel();
  },
});

export default ResizablePanel;
</script>

<style scoped></style>
